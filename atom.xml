<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Avery&#39;s blog</title>
  
  <subtitle>外接海馬體連線中...</subtitle>
  <link href="https://avery210412.github.io/atom.xml" rel="self"/>
  
  <link href="https://avery210412.github.io/"/>
  <updated>2022-04-28T15:52:22.792Z</updated>
  <id>https://avery210412.github.io/</id>
  
  <author>
    <name>Avery</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[CMD101] Command Line Interface</title>
    <link href="https://avery210412.github.io/tool/20220428/3915517411/"/>
    <id>https://avery210412.github.io/tool/20220428/3915517411/</id>
    <published>2022-04-28T04:00:00.000Z</published>
    <updated>2022-04-28T15:52:22.792Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>命令列介面</strong>（CLI）是在<strong>圖形使用者介面</strong>（GUI）得到普及之前，使用最為廣泛的使用者介面，通常認為 CLI 沒有 GUI 那麼方便操作，是因為 CLI 需要使用者記憶操作的指令，通過鍵盤輸入指令，電腦接收到指令後予以執行。</p><span id="more"></span><h2 id="What-is-CLI？"><a href="#What-is-CLI？" class="headerlink" title="What is CLI？"></a>What is CLI？</h2><p><img src="https://imgur.com/HpO14MU.png" alt="CLI v.s. GUI"></p><p>相較於圖形使用者介面（Graphical User Interface, GUI）透過點擊圖示（icon），開啟圖形化視窗操作電腦的方式，命令列介面（Command Line Interface, CLI）是一種以<strong>文本</strong>為主的應用程式，使用者透過輸入指令，與電腦進行溝通。</p><p>雖然現在的電腦系統都提供了圖形化的操作方式，但並沒有停止提供文字模式的命令列操作方式。使用 CLI 有以下主因：</p><ul><li><p>速度</p><p>GUI 操作電腦的原理，也是在調用 CLI 指令，直接輸入 CLI 指令操作電腦更快速。</p></li><li><p>功能</p><p>GUI 只有涵蓋一般使用者<strong>常用</strong>的電腦操作指令，CLI 對於<strong>電腦系統</strong>有更精確的控制。</p><p>有些<strong>伺服器系統</strong>例如：資料庫（Database），由於資源的考量，並不支援 GUI 操作系統，因此只能使用 CLI 與伺服器進行溝通。</p></li><li><p>自動化</p><p>當需要大規模處理邏輯相同的任務時，透過 CLI 撰寫腳本語言（Scripting language），可以更輕鬆的管理系統。</p></li></ul><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><h3 id="目錄與檔案管理"><a href="#目錄與檔案管理" class="headerlink" title="目錄與檔案管理"></a>目錄與檔案管理</h3><table><thead><tr><th>指令</th><th>名稱</th><th>功能</th></tr></thead><tbody><tr><td><code>pwd</code></td><td>Print Working Directory</td><td>顯示目前所在的目錄</td></tr><tr><td><code>cd</code></td><td>Change Directory</td><td>切換目錄</td></tr><tr><td><code>ls</code></td><td>List</td><td>列出當前所在目錄的檔案清單</td></tr><tr><td><code>ls -a</code></td><td></td><td>列出當前所在目錄的檔案清單，包含<strong>隱藏檔</strong></td></tr><tr><td><code>ls -l</code></td><td></td><td>以<strong>長資料</strong>的形式，列出當前所在目錄的檔案清單（包含檔案屬性與權限）</td></tr><tr><td><code>mkdir</code></td><td>Make Directory</td><td>建立新目錄</td></tr><tr><td><code>rmdir</code></td><td>Remove Directory</td><td>刪除「空」目錄</td></tr><tr><td><code>cp</code></td><td>Copy</td><td>複製檔案</td></tr><tr><td><code>cp -r</code></td><td></td><td>複製目錄</td></tr><tr><td><code>mv</code></td><td>Move</td><td><strong>移動</strong>檔案或目錄 &#x2F; <strong>變更檔名</strong></td></tr><tr><td><code>rm</code></td><td>Remove</td><td>移除檔案</td></tr><tr><td><code>rm -r</code></td><td></td><td>移除目錄</td></tr></tbody></table><ul><li>注意：使用 <code>rmdir</code> 刪除目錄時，被刪除的目錄裡面必定不能存在其他的目錄或檔案。當目錄裡面還有子目錄時，使用 <code>rm -r</code> 指令，該目錄與其子目錄會一併被刪除。</li></ul><h3 id="目錄與路徑"><a href="#目錄與路徑" class="headerlink" title="目錄與路徑"></a>目錄與路徑</h3><ul><li><p>絕對路徑</p><p>由<strong>根目錄</strong>（<code>/</code>）開始寫起的檔名或目錄名稱。</p><p>範例：移至 <code>/usr/share/doc</code> 目錄</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/doc</span><br></pre></td></tr></table></figure></li><li><p>相對路徑</p><p>相對於<strong>目前路徑</strong>的檔名或目錄名稱。</p><p>範例：從 <code>/usr/share/doc</code> 目錄移至 <code>/usr/share/man</code> 目錄</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../man</span><br></pre></td></tr></table></figure></li><li><p>切換目錄（<code>cd</code>）的操作</p><table><thead><tr><th>符號</th><th>定義</th></tr></thead><tbody><tr><td><code>.</code></td><td>同一層目錄</td></tr><tr><td><code>..</code></td><td>上一層目錄</td></tr><tr><td><code>-</code></td><td>前一個工作目錄</td></tr><tr><td><code>~</code></td><td>家目錄</td></tr></tbody></table></li></ul><h3 id="檔案內容查閱"><a href="#檔案內容查閱" class="headerlink" title="檔案內容查閱"></a>檔案內容查閱</h3><table><thead><tr><th>指令</th><th>名稱</th><th>功能</th></tr></thead><tbody><tr><td><code>touch</code></td><td>Touch</td><td>修改檔案時間 &#x2F; 建立新檔案</td></tr><tr><td><code>cat</code></td><td>Concatenate</td><td>將檔案內容<strong>完整</strong>顯示在 Terminal 畫面中</td></tr><tr><td><code>less</code></td><td>Less</td><td>將檔案內容以<strong>分頁</strong>形式顯示在 Terminal 畫面中</td></tr><tr><td><code>head</code></td><td>Head</td><td>取出檔案前面幾行的內容</td></tr><tr><td><code>tail</code></td><td>Tail</td><td>取出檔案後面幾行的內容</td></tr><tr><td><code>file</code></td><td>File</td><td>檢查檔案類型</td></tr></tbody></table><h3 id="Vim-編輯文字檔案"><a href="#Vim-編輯文字檔案" class="headerlink" title="Vim 編輯文字檔案"></a>Vim 編輯文字檔案</h3><p>Vim 主要是使用<strong>模式的切換</strong>來進行輸入、移動游標、選取、複製及貼上等操作。Vim 常用的模式有兩種：<strong>Normal 模式</strong>以及 <strong>Insert 模式</strong>。</p><p><img src="https://i.imgur.com/s3Kool3.png" alt="Vim"></p><ul><li><p>Normal 模式：無法輸入文字，僅能進行複製、貼上、存檔或離開動作。</p></li><li><p>Insert 模式：可以編輯文字檔案。</p></li><li><p>透過 Vim 打開文檔後，輸入 <code>i</code>、<code>a</code> 或 <code>o</code>，進入 Insert 模式。</p></li><li><p>文檔編輯結束，輸入 <code>Ese</code>，回到 Normal 模式。</p></li><li><p>在 Normal 模式下，輸入 <code>:wq</code> 執行存檔並關閉檔案，退出 Vim 編輯器。</p></li><li><p>常用來編輯 Git Commit 訊息。</p></li></ul><h3 id="網路相關指令"><a href="#網路相關指令" class="headerlink" title="網路相關指令"></a>網路相關指令</h3><ul><li><p><code>ping</code>：網路檢測工具，檢查自己與特定設備之間的網路是否暢通</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping google.com</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Pinging google.com [172.217.163.46] with 32 bytes of data:</span><br><span class="line">Reply from 172.217.163.46: bytes=32 time=9ms TTL=113</span><br><span class="line">Reply from 172.217.163.46: bytes=32 time=9ms TTL=113</span><br><span class="line">Reply from 172.217.163.46: bytes=32 time=8ms TTL=113</span><br><span class="line">Reply from 172.217.163.46: bytes=32 time=13ms TTL=113</span><br><span class="line"></span><br><span class="line">Ping statistics for 172.217.163.46:</span><br><span class="line">    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),</span><br><span class="line">Approximate round trip times in milli-seconds:</span><br><span class="line">    Minimum = 8ms, Maximum = 13ms, Average = 9ms</span><br></pre></td></tr></table></figure></li><li><p><code>nslookup</code>：查詢 DNS 回應是否正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup google.com</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Non-authoritative answer:</span><br><span class="line">Server:  hitronhub.home</span><br><span class="line">Address:  192.168.0.1</span><br><span class="line"></span><br><span class="line">Name:  google.com</span><br><span class="line">Addresses:  2404:6800:4012:4::200e</span><br><span class="line">            172.217.163.46</span><br></pre></td></tr></table></figure></li><li><p><code>wget</code>：下載網路資源至當前目錄。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget google.com</span><br></pre></td></tr></table></figure><p>將 <code>google.com</code> 的 <strong>html 頁面</strong>下載至當前目錄。</p></li><li><p><code>curl</code>：與 <code>wget</code> 相似，可以用來下載網路資源，但功能比 <code>wget</code> 更強大，使用 <code>curl</code> 進行 HTTP Request，可以測試 Restful api。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -d <span class="string">&#x27;&#123;&quot;name&quot;: &quot;Avery&quot;&#125;&#x27;</span> <span class="string">&#x27;https://www.example.com/api/members&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="其他常用指令"><a href="#其他常用指令" class="headerlink" title="其他常用指令"></a>其他常用指令</h3><table><thead><tr><th>指令</th><th>名稱</th><th>功能</th></tr></thead><tbody><tr><td><code>clear</code></td><td>Clear</td><td>清除 Terminal 畫面</td></tr><tr><td><code>date</code></td><td>Date</td><td>印出當前日期</td></tr><tr><td><code>grep</code></td><td>Global Regular Expression Print</td><td>在指定檔案中尋找特定字串</td></tr><tr><td><code>echo</code></td><td>Echo</td><td>將字串輸出到 Terminal 畫面</td></tr><tr><td>&amp;#124;</td><td>Pipe</td><td>把前面指令的<strong>輸出</strong>，作為後面指令的<strong>輸入</strong></td></tr><tr><td><code>&gt;</code></td><td>Redirect</td><td>重新導向</td></tr></tbody></table><ul><li><p>Pipe 範例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> file.txt | grep Hello</span><br></pre></td></tr></table></figure><p>從印出的 file.txt 內容中，尋找字串 <code>Hello</code> 並輸出。</p></li><li><p>Redirect 範例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello&#x27;</span> &gt; file.txt</span><br></pre></td></tr></table></figure><p>產生字串 <code>Hello</code>，並覆蓋 file.txt 內容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hi&#x27;</span> &gt;&gt; file.txt</span><br></pre></td></tr></table></figure><p>產生字串 <code>Hi</code> ，並將內容新增至 file.txt 最後面。</p></li></ul><h4 id="CLI-參考資料"><a href="#CLI-參考資料" class="headerlink" title="CLI 參考資料"></a>CLI 參考資料</h4><p><a href="https://tableplus.com/blog/2018/08/cli-vs-gui-which-one-is-better.html">CLI vs GUI - Which one is better?</a></p><p><a href="https://blog.techbridge.cc/2017/12/23/linux-commnd-line-tutorial/">Linux Command 命令列指令與基本操作入門教學</a></p><p><a href="https://blog.techbridge.cc/2019/02/01/linux-curl-command-tutorial/">Linux Curl Command 指令與基本操作入門教學</a></p><p><a href="http://hackgrass.blogspot.com/2017/04/linuxunix-like-command-line.html">基礎 Linux（UNIX-Like）指令整理介紹</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;命令列介面&lt;/strong&gt;（CLI）是在&lt;strong&gt;圖形使用者介面&lt;/strong&gt;（GUI）得到普及之前，使用最為廣泛的使用者介面，通常認為 CLI 沒有 GUI 那麼方便操作，是因為 CLI 需要使用者記憶操作的指令，通過鍵盤輸入指令，電腦接收到指令後予以執行。&lt;/p&gt;</summary>
    
    
    
    <category term="tool" scheme="https://avery210412.github.io/categories/tool/"/>
    
    
    <category term="Lidemy" scheme="https://avery210412.github.io/tags/Lidemy/"/>
    
    <category term="Command Line" scheme="https://avery210412.github.io/tags/Command-Line/"/>
    
  </entry>
  
</feed>
